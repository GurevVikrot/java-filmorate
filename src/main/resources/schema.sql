CREATE TABLE IF NOT EXISTS users
(
    user_id  long GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login    varchar(50) NOT NULL,
    name     varchar(50) NOT NULL,
    email    varchar(70) NOT NULL,
    birthday date
);

CREATE TABLE IF NOT EXISTS user_friends
(
    user_id   long REFERENCES users (user_id),
    friend_id long REFERENCES users (user_id) CHECK (friend_id <> user_id),
    status boolean DEFAULT false,
    CONSTRAINT friendship_pk PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS rating_mpa
(
    rating_id integer GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    rating    varchar(5)
);

CREATE TABLE IF NOT EXISTS films
(
    film_id      long GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         varchar(50) NOT NULL,
    description  varchar(300),
    rating       integer REFERENCES rating_mpa (rating_id),
    release_date date        NOT NULL,
    duration     integer     NOT NULL
);

CREATE TABLE IF NOT EXISTS genre
(
    genre_id integer GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    genre    varchar
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id  long REFERENCES films (film_id),
    genre_id integer REFERENCES genre (genre_id) check (genre_id <> 0),
    CONSTRAINT film_genre_pk PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS film_likes
(
    film_id long REFERENCES films (film_id),
    user_id long REFERENCES users (user_id),
    CONSTRAINT film_likes_pk PRIMARY KEY (film_id, user_id)
);